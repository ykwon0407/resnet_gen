name: "ResNet"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 448
input_dim: 448
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "conv1"
	top: "conv1"
	name: "bn_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "conv1"
	top: "conv1"
	name: "scale_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "new_conv1"
  type: "Convolution"
  bottom: "conv1"
  top: "new_conv1"
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "new_conv1"
	top: "new_conv1"
	name: "bn_new_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "new_conv1"
	top: "new_conv1"
	name: "scale_new_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "new_conv1_relu"
  type: "ReLU"
  bottom: "new_conv1"
  top: "new_conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "new_conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "res2a_branch1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch1"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "bn2a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "scale2a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "bn21_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "scale21_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2a_branch2a_relu"
  type: "ReLU"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "bn21_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "scale21_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2a_branch2b_relu"
  type: "ReLU"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
}
layer {
  name: "res2a_branch2c"
  type: "Convolution"
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "bn21_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "scale21_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res2a_branch1"
  bottom: "res2a_branch2c"
  name: "res2a"
  top: "res2a"
}
layer {
  name: "res2a_relu"
  type: "ReLU"
  bottom: "res2a"
  top: "res2a"
}
layer {
  name: "res2b_branch2a"
  type: "Convolution"
  bottom: "res2a"
  top: "res2b_branch2a"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "bn22_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "scale22_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2b_branch2a_relu"
  type: "ReLU"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
}
layer {
  name: "res2b_branch2b"
  type: "Convolution"
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "bn22_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "scale22_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2b_branch2b_relu"
  type: "ReLU"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
}
layer {
  name: "res2b_branch2c"
  type: "Convolution"
  bottom: "res2b_branch2b"
  top: "res2b_branch2c"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "bn22_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "scale22_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res2a"
  bottom: "res2b_branch2c"
  name: "res2b"
  top: "res2b"
}
layer {
  name: "res2b_relu"
  type: "ReLU"
  bottom: "res2b"
  top: "res2b"
}
layer {
  name: "res2c_branch2a"
  type: "Convolution"
  bottom: "res2b"
  top: "res2c_branch2a"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "bn23_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "scale23_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2c_branch2a_relu"
  type: "ReLU"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
}
layer {
  name: "res2c_branch2b"
  type: "Convolution"
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "bn23_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "scale23_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res2c_branch2b_relu"
  type: "ReLU"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
}
layer {
  name: "res2c_branch2c"
  type: "Convolution"
  bottom: "res2c_branch2b"
  top: "res2c_branch2c"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "bn23_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "scale23_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res2b"
  bottom: "res2c_branch2c"
  name: "res2c"
  top: "res2c"
}
layer {
  name: "res2c_relu"
  type: "ReLU"
  bottom: "res2c"
  top: "res2c"
}
layer {
  name: "res3_1_branch1"
  type: "Convolution"
  bottom: "res2c"
  top: "res3_1_branch1"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res2_1_branch1"
	top: "res2_1_branch1"
	name: "bn3_1_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res2_1_branch1"
	top: "res2_1_branch1"
	name: "scale3_1_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_1_branch2a"
  type: "Convolution"
  bottom: "res2c"
  top: "res3_1_branch2a"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_1_branch2a"
	top: "res3_1_branch2a"
	name: "bn3_1_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_1_branch2a"
	top: "res3_1_branch2a"
	name: "scale3_1_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_1_branch2a_relu"
  type: "ReLU"
  bottom: "res3_1_branch2a"
  top: "res3_1_branch2a"
}
layer {
  name: "res3_1_branch2b"
  type: "Convolution"
  bottom: "res3_1_branch2a"
  top: "res3_1_branch2b"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_1_branch2b"
	top: "res3_1_branch2b"
	name: "bn3_1_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_1_branch2b"
	top: "res3_1_branch2b"
	name: "scale3_1_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_1_branch2b_relu"
  type: "ReLU"
  bottom: "res3_1_branch2b"
  top: "res3_1_branch2b"
}
layer {
  name: "res3_1_branch2c"
  type: "Convolution"
  bottom: "res3_1_branch2b"
  top: "res3_1_branch2c"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_1_branch2c"
	top: "res3_1_branch2c"
	name: "bn3_1_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_1_branch2c"
	top: "res3_1_branch2c"
	name: "scale3_1_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res3_1_branch1"
  bottom: "res3_1_branch2c"
  name: "res3_1"
  top: "res3_1"
}
layer {
  name: "res3_1_relu"
  type: "ReLU"
  bottom: "res3_1"
  top: "res3_1"
}
layer {
  name: "res3_2_branch2a"
  type: "Convolution"
  bottom: "res3_1"
  top: "res3_2_branch2a"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_2_branch2a"
	top: "res3_2_branch2a"
	name: "bn3_2_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_2_branch2a"
	top: "res3_2_branch2a"
	name: "scale3_2_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_2_branch2a_relu"
  type: "ReLU"
  bottom: "res3_2_branch2a"
  top: "res3_2_branch2a"
}
layer {
  name: "res3_2_branch2b"
  type: "Convolution"
  bottom: "res3_2_branch2a"
  top: "res3_2_branch2b"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_2_branch2b"
	top: "res3_2_branch2b"
	name: "bn3_2_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_2_branch2b"
	top: "res3_2_branch2b"
	name: "scale3_2_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_2_branch2b_relu"
  type: "ReLU"
  bottom: "res3_2_branch2b"
  top: "res3_2_branch2b"
}
layer {
  name: "res3_2_branch2c"
  type: "Convolution"
  bottom: "res3_2_branch2b"
  top: "res3_2_branch2c"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_2_branch2c"
	top: "res3_2_branch2c"
	name: "bn3_2_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_2_branch2c"
	top: "res3_2_branch2c"
	name: "scale3_2_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res3_1"
  bottom: "res3_2_branch2c"
  name: "res3_2"
  top: "res3_2"
}
layer {
  name: "res3_2_relu"
  type: "ReLU"
  bottom: "res3_2"
  top: "res3_2"
}
layer {
  name: "res3_3_branch2a"
  type: "Convolution"
  bottom: "res3_2"
  top: "res3_3_branch2a"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_3_branch2a"
	top: "res3_3_branch2a"
	name: "bn3_3_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_3_branch2a"
	top: "res3_3_branch2a"
	name: "scale3_3_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_3_branch2a_relu"
  type: "ReLU"
  bottom: "res3_3_branch2a"
  top: "res3_3_branch2a"
}
layer {
  name: "res3_3_branch2b"
  type: "Convolution"
  bottom: "res3_3_branch2a"
  top: "res3_3_branch2b"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_3_branch2b"
	top: "res3_3_branch2b"
	name: "bn3_3_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_3_branch2b"
	top: "res3_3_branch2b"
	name: "scale3_3_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_3_branch2b_relu"
  type: "ReLU"
  bottom: "res3_3_branch2b"
  top: "res3_3_branch2b"
}
layer {
  name: "res3_3_branch2c"
  type: "Convolution"
  bottom: "res3_3_branch2b"
  top: "res3_3_branch2c"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_3_branch2c"
	top: "res3_3_branch2c"
	name: "bn3_3_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_3_branch2c"
	top: "res3_3_branch2c"
	name: "scale3_3_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res3_2"
  bottom: "res3_3_branch2c"
  name: "res3_3"
  top: "res3_3"
}
layer {
  name: "res3_3_relu"
  type: "ReLU"
  bottom: "res3_3"
  top: "res3_3"
}
layer {
  name: "res3_4_branch2a"
  type: "Convolution"
  bottom: "res3_3"
  top: "res3_4_branch2a"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_4_branch2a"
	top: "res3_4_branch2a"
	name: "bn3_4_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_4_branch2a"
	top: "res3_4_branch2a"
	name: "scale3_4_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_4_branch2a_relu"
  type: "ReLU"
  bottom: "res3_4_branch2a"
  top: "res3_4_branch2a"
}
layer {
  name: "res3_4_branch2b"
  type: "Convolution"
  bottom: "res3_4_branch2a"
  top: "res3_4_branch2b"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_4_branch2b"
	top: "res3_4_branch2b"
	name: "bn3_4_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_4_branch2b"
	top: "res3_4_branch2b"
	name: "scale3_4_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res3_4_branch2b_relu"
  type: "ReLU"
  bottom: "res3_4_branch2b"
  top: "res3_4_branch2b"
}
layer {
  name: "res3_4_branch2c"
  type: "Convolution"
  bottom: "res3_4_branch2b"
  top: "res3_4_branch2c"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res3_4_branch2c"
	top: "res3_4_branch2c"
	name: "bn3_4_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res3_4_branch2c"
	top: "res3_4_branch2c"
	name: "scale3_4_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res3_3"
  bottom: "res3_4_branch2c"
  name: "res3_4"
  top: "res3_4"
}
layer {
  name: "res3_4_relu"
  type: "ReLU"
  bottom: "res3_4"
  top: "res3_4"
}
layer {
  name: "res4_1_branch1"
  type: "Convolution"
  bottom: "res3_4"
  top: "res4_1_branch1"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_1_branch1"
	top: "res4_1_branch1"
	name: "bn4_1_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_1_branch1"
	top: "res4_1_branch1"
	name: "scale4_1_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_1_branch2a"
  type: "Convolution"
  bottom: "res3_4"
  top: "res4_1_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_1_branch2a"
	top: "res4_1_branch2a"
	name: "bn4_1_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_1_branch2a"
	top: "res4_1_branch2a"
	name: "scale4_1_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_1_branch2a_relu"
  type: "ReLU"
  bottom: "res4_1_branch2a"
  top: "res4_1_branch2a"
}
layer {
  name: "res4_1_branch2b"
  type: "Convolution"
  bottom: "res4_1_branch2a"
  top: "res4_1_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_1_branch2b"
	top: "res4_1_branch2b"
	name: "bn4_1_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_1_branch2b"
	top: "res4_1_branch2b"
	name: "scale4_1_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_1_branch2b_relu"
  type: "ReLU"
  bottom: "res4_1_branch2b"
  top: "res4_1_branch2b"
}
layer {
  name: "res4_1_branch2c"
  type: "Convolution"
  bottom: "res4_1_branch2b"
  top: "res4_1_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_1_branch2c"
	top: "res4_1_branch2c"
	name: "bn4_1_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_1_branch2c"
	top: "res4_1_branch2c"
	name: "scale4_1_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_1_branch1"
  bottom: "res4_1_branch2c"
  name: "res4_1"
  top: "res4_1"
}
layer {
  name: "res4_1_relu"
  type: "ReLU"
  bottom: "res4_1"
  top: "res4_1"
}
layer {
  name: "res4_2_branch2a"
  type: "Convolution"
  bottom: "res4_1"
  top: "res4_2_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_2_branch2a"
	top: "res4_2_branch2a"
	name: "bn4_2_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_2_branch2a"
	top: "res4_2_branch2a"
	name: "scale4_2_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_2_branch2a_relu"
  type: "ReLU"
  bottom: "res4_2_branch2a"
  top: "res4_2_branch2a"
}
layer {
  name: "res4_2_branch2b"
  type: "Convolution"
  bottom: "res4_2_branch2a"
  top: "res4_2_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_2_branch2b"
	top: "res4_2_branch2b"
	name: "bn4_2_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_2_branch2b"
	top: "res4_2_branch2b"
	name: "scale4_2_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_2_branch2b_relu"
  type: "ReLU"
  bottom: "res4_2_branch2b"
  top: "res4_2_branch2b"
}
layer {
  name: "res4_2_branch2c"
  type: "Convolution"
  bottom: "res4_2_branch2b"
  top: "res4_2_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_2_branch2c"
	top: "res4_2_branch2c"
	name: "bn4_2_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_2_branch2c"
	top: "res4_2_branch2c"
	name: "scale4_2_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_1"
  bottom: "res4_2_branch2c"
  name: "res4_2"
  top: "res4_2"
}
layer {
  name: "res4_2_relu"
  type: "ReLU"
  bottom: "res4_2"
  top: "res4_2"
}
layer {
  name: "res4_3_branch2a"
  type: "Convolution"
  bottom: "res4_2"
  top: "res4_3_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_3_branch2a"
	top: "res4_3_branch2a"
	name: "bn4_3_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_3_branch2a"
	top: "res4_3_branch2a"
	name: "scale4_3_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_3_branch2a_relu"
  type: "ReLU"
  bottom: "res4_3_branch2a"
  top: "res4_3_branch2a"
}
layer {
  name: "res4_3_branch2b"
  type: "Convolution"
  bottom: "res4_3_branch2a"
  top: "res4_3_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_3_branch2b"
	top: "res4_3_branch2b"
	name: "bn4_3_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_3_branch2b"
	top: "res4_3_branch2b"
	name: "scale4_3_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_3_branch2b_relu"
  type: "ReLU"
  bottom: "res4_3_branch2b"
  top: "res4_3_branch2b"
}
layer {
  name: "res4_3_branch2c"
  type: "Convolution"
  bottom: "res4_3_branch2b"
  top: "res4_3_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_3_branch2c"
	top: "res4_3_branch2c"
	name: "bn4_3_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_3_branch2c"
	top: "res4_3_branch2c"
	name: "scale4_3_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_2"
  bottom: "res4_3_branch2c"
  name: "res4_3"
  top: "res4_3"
}
layer {
  name: "res4_3_relu"
  type: "ReLU"
  bottom: "res4_3"
  top: "res4_3"
}
layer {
  name: "res4_4_branch2a"
  type: "Convolution"
  bottom: "res4_3"
  top: "res4_4_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_4_branch2a"
	top: "res4_4_branch2a"
	name: "bn4_4_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_4_branch2a"
	top: "res4_4_branch2a"
	name: "scale4_4_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_4_branch2a_relu"
  type: "ReLU"
  bottom: "res4_4_branch2a"
  top: "res4_4_branch2a"
}
layer {
  name: "res4_4_branch2b"
  type: "Convolution"
  bottom: "res4_4_branch2a"
  top: "res4_4_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_4_branch2b"
	top: "res4_4_branch2b"
	name: "bn4_4_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_4_branch2b"
	top: "res4_4_branch2b"
	name: "scale4_4_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_4_branch2b_relu"
  type: "ReLU"
  bottom: "res4_4_branch2b"
  top: "res4_4_branch2b"
}
layer {
  name: "res4_4_branch2c"
  type: "Convolution"
  bottom: "res4_4_branch2b"
  top: "res4_4_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_4_branch2c"
	top: "res4_4_branch2c"
	name: "bn4_4_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_4_branch2c"
	top: "res4_4_branch2c"
	name: "scale4_4_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_3"
  bottom: "res4_4_branch2c"
  name: "res4_4"
  top: "res4_4"
}
layer {
  name: "res4_4_relu"
  type: "ReLU"
  bottom: "res4_4"
  top: "res4_4"
}
layer {
  name: "res4_5_branch2a"
  type: "Convolution"
  bottom: "res4_4"
  top: "res4_5_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_5_branch2a"
	top: "res4_5_branch2a"
	name: "bn4_5_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_5_branch2a"
	top: "res4_5_branch2a"
	name: "scale4_5_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_5_branch2a_relu"
  type: "ReLU"
  bottom: "res4_5_branch2a"
  top: "res4_5_branch2a"
}
layer {
  name: "res4_5_branch2b"
  type: "Convolution"
  bottom: "res4_5_branch2a"
  top: "res4_5_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_5_branch2b"
	top: "res4_5_branch2b"
	name: "bn4_5_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_5_branch2b"
	top: "res4_5_branch2b"
	name: "scale4_5_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_5_branch2b_relu"
  type: "ReLU"
  bottom: "res4_5_branch2b"
  top: "res4_5_branch2b"
}
layer {
  name: "res4_5_branch2c"
  type: "Convolution"
  bottom: "res4_5_branch2b"
  top: "res4_5_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_5_branch2c"
	top: "res4_5_branch2c"
	name: "bn4_5_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_5_branch2c"
	top: "res4_5_branch2c"
	name: "scale4_5_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_4"
  bottom: "res4_5_branch2c"
  name: "res4_5"
  top: "res4_5"
}
layer {
  name: "res4_5_relu"
  type: "ReLU"
  bottom: "res4_5"
  top: "res4_5"
}
layer {
  name: "res4_6_branch2a"
  type: "Convolution"
  bottom: "res4_5"
  top: "res4_6_branch2a"
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_6_branch2a"
	top: "res4_6_branch2a"
	name: "bn4_6_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_6_branch2a"
	top: "res4_6_branch2a"
	name: "scale4_6_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_6_branch2a_relu"
  type: "ReLU"
  bottom: "res4_6_branch2a"
  top: "res4_6_branch2a"
}
layer {
  name: "res4_6_branch2b"
  type: "Convolution"
  bottom: "res4_6_branch2a"
  top: "res4_6_branch2b"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_6_branch2b"
	top: "res4_6_branch2b"
	name: "bn4_6_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_6_branch2b"
	top: "res4_6_branch2b"
	name: "scale4_6_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res4_6_branch2b_relu"
  type: "ReLU"
  bottom: "res4_6_branch2b"
  top: "res4_6_branch2b"
}
layer {
  name: "res4_6_branch2c"
  type: "Convolution"
  bottom: "res4_6_branch2b"
  top: "res4_6_branch2c"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res4_6_branch2c"
	top: "res4_6_branch2c"
	name: "bn4_6_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res4_6_branch2c"
	top: "res4_6_branch2c"
	name: "scale4_6_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res4_5"
  bottom: "res4_6_branch2c"
  name: "res4_6"
  top: "res4_6"
}
layer {
  name: "res4_6_relu"
  type: "ReLU"
  bottom: "res4_6"
  top: "res4_6"
}
layer {
  name: "res5_1_branch1"
  type: "Convolution"
  bottom: "res4_6"
  top: "res5_1_branch1"
  convolution_param {
    num_output: 2048
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_1_branch1"
	top: "res5_1_branch1"
	name: "bn5_1_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_1_branch1"
	top: "res5_1_branch1"
	name: "scale5_1_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res_5_1_branch2a"
  type: "Convolution"
  bottom: "res4_6"
  top: "res_5_1_branch2a"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 2
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_1_branch2a"
	top: "res5_1_branch2a"
	name: "bn5_1_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_1_branch2a"
	top: "res5_1_branch2a"
	name: "scale5_1_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_1_branch2a_relu"
  type: "ReLU"
  bottom: "res5_1_branch2a"
  top: "res5_1_branch2a"
}
layer {
  name: "res5_1_branch2b"
  type: "Convolution"
  bottom: "res5_1_branch2a"
  top: "res5_1_branch2b"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_1_branch2b"
	top: "res5_1_branch2b"
	name: "bn5_1_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_1_branch2b"
	top: "res5_1_branch2b"
	name: "scale5_1_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_1_branch2b_relu"
  type: "ReLU"
  bottom: "res5_1_branch2b"
  top: "res5_1_branch2b"
}
layer {
  name: "res5_1_branch2c"
  type: "Convolution"
  bottom: "res5_1_branch2b"
  top: "res5_1_branch2c"
  convolution_param {
    num_output: 2048
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_1_branch2c"
	top: "res5_1_branch2c"
	name: "bn5_1_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_1_branch2c"
	top: "res5_1_branch2c"
	name: "scale5_1_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res5_1_branch1"
  bottom: "res5_1_branch2c"
  name: "res5_1"
  top: "res5_1"
}
layer {
  name: "res5_1_relu"
  type: "ReLU"
  bottom: "res5_1"
  top: "res5_1"
}
layer {
  name: "res5_2_branch2a"
  type: "Convolution"
  bottom: "res5_1"
  top: "res5_2_branch2a"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_2_branch2a"
	top: "res5_2_branch2a"
	name: "bn5_2_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_2_branch2a"
	top: "res5_2_branch2a"
	name: "scale5_2_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_2_branch2a_relu"
  type: "ReLU"
  bottom: "res5_2_branch2a"
  top: "res5_2_branch2a"
}
layer {
  name: "res5_2_branch2b"
  type: "Convolution"
  bottom: "res5_2_branch2a"
  top: "res5_2_branch2b"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_2_branch2b"
	top: "res5_2_branch2b"
	name: "bn5_2_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_2_branch2b"
	top: "res5_2_branch2b"
	name: "scale5_2_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_2_branch2b_relu"
  type: "ReLU"
  bottom: "res5_2_branch2b"
  top: "res5_2_branch2b"
}
layer {
  name: "res5_2_branch2c"
  type: "Convolution"
  bottom: "res5_2_branch2b"
  top: "res5_2_branch2c"
  convolution_param {
    num_output: 2048
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_2_branch2c"
	top: "res5_2_branch2c"
	name: "bn5_2_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_2_branch2c"
	top: "res5_2_branch2c"
	name: "scale5_2_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res5_1"
  bottom: "res5_2_branch2c"
  name: "res5_2"
  top: "res5_2"
}
layer {
  name: "res5_2_relu"
  type: "ReLU"
  bottom: "res5_2"
  top: "res5_2"
}
layer {
  name: "res5_3_branch2a"
  type: "Convolution"
  bottom: "res5_2"
  top: "res5_3_branch2a"
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_3_branch2a"
	top: "res5_3_branch2a"
	name: "bn5_3_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_3_branch2a"
	top: "res5_3_branch2a"
	name: "scale5_3_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_3_branch2a_relu"
  type: "ReLU"
  bottom: "res5_3_branch2a"
  top: "res5_3_branch2a"
}
layer {
  name: "res5_3_branch2b"
  type: "Convolution"
  bottom: "res5_3_branch2a"
  top: "res5_3_branch2b"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_3_branch2b"
	top: "res5_3_branch2b"
	name: "bn5_3_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_3_branch2b"
	top: "res5_3_branch2b"
	name: "scale5_3_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  name: "res5_3_branch2b_relu"
  type: "ReLU"
  bottom: "res5_3_branch2b"
  top: "res5_3_branch2b"
}
layer {
  name: "res5_3_branch2c"
  type: "Convolution"
  bottom: "res5_3_branch2b"
  top: "res5_3_branch2c"
  convolution_param {
    num_output: 2048
    pad: 0
    kernel_size: 1
    stride: 1
    bias_term: false
    weight_filler {
      type: "msra"
    }
  }
}
layer {
	bottom: "res5_3_branch2c"
	top: "res5_3_branch2c"
	name: "bn5_3_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}
layer {
	bottom: "res5_3_branch2c"
	top: "res5_3_branch2c"
	name: "scale5_3_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}
layer {
  type: "Eltwise"
  bottom: "res5_2"
  bottom: "res5_3_branch2c"
  name: "res5_3"
  top: "res5_3"
}
layer {
  name: "res5_3_relu"
  type: "ReLU"
  bottom: "res5_3"
  top: "res5_3"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "res5_3"
  top: "pool5"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "fc5"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
     num_output: 5
     weight_filler {
       type: "gaussian"
       std: 0.001
     }
     bias_filler {
       type: "constant"
       value: 0
     }
  }
}
layer {
  name: "loss2/softmax"
  type: "SoftmaxWithLoss"
  bottom: "fc5"
  bottom: "label"
  top: "loss2/softmax"
}
layer {
  bottom: "fc5"
  bottom: "label"
  top: "loss1/acc"
  name: "loss1/acc"
  type: "Accuracy"
}
